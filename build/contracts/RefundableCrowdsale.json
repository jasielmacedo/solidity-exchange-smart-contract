{
  "contractName": "RefundableCrowdsale",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevClosingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newClosingTime",
          "type": "uint256"
        }
      ],
      "name": "TimedCrowdsaleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"CrowdsaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users getting a refund if goal is not met. Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"returns\":{\"_0\":\"the balance of an account.\"}},\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"claimRefund(address)\":{\"details\":\"Investors can claim refunds here if crowdsale is unsuccessful.\",\"params\":{\"refundee\":\"Whose refund will be claimed.\"}},\"closingTime()\":{\"returns\":{\"_0\":\"the crowdsale closing time.\"}},\"constructor\":{\"details\":\"Constructor, creates RefundEscrow.\",\"params\":{\"goal_\":\"Funding goal\"}},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"finalized()\":{\"returns\":{\"_0\":\"true if the crowdsale is finalized, false otherwise.\"}},\"goal()\":{\"returns\":{\"_0\":\"minimum amount of funds to be raised in wei.\"}},\"goalReached()\":{\"details\":\"Checks whether funding goal was reached.\",\"returns\":{\"_0\":\"Whether funding goal was reached\"}},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"isOpen()\":{\"returns\":{\"_0\":\"true if the crowdsale is open, false otherwise.\"}},\"openingTime()\":{\"returns\":{\"_0\":\"the crowdsale opening time.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"tokenBalance()\":{\"returns\":{\"_0\":\"the token balance available to buy.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}},\"withdrawTokens()\":{\"details\":\"Withdraw tokens only after crowdsale ends.\"}},\"title\":\"RefundableCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"notice\":\"Event for crowdsale extending\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/crowdsale/distribution/RefundableCrowdsale.sol\":\"RefundableCrowdsale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x0bf0f9c9bfdea4be5d7dc3f1fccf177de0a5e7da51f96bfe5923af8ad1961a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475920b50f6082a8d87a140cc5528bfc98c1f3efb8e2c367f93a1e482cea24a6\",\"dweb:/ipfs/QmVEUrKPdy3vgPjjzsikKLETUBFRo6uKbrgn2zeaJt7Mcu\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xaf3f0d87fb0237dc255183be425f45fc902b343494d8a083878eb615211cc789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271399b7a3f92a81525320ccb879999cfd58cd5ce9f7e1cc29c995fc494bd08f\",\"dweb:/ipfs/QmNoB7sWcRJyJLwDeXttzKcxdUzZAKij4oAZUgcBAGZawj\"]},\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xf716509efeb3dc8ce0ae09982632f90316363d6d0ada9b64867e4bbeed7e015a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0f671a7d1fdf840230ae8416349a593a6ec61f3706370fbf08e185dfe5d1917\",\"dweb:/ipfs/QmRZRKRuryh6xSULsqQvnm7PUsjfL1y2UeAhRmPRn1MZjJ\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xebdfd03e9bc85317f0bfc3e61a2912fedf9202c9a3d26e4f2225ab7750ce0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cf4d0ace183d04fe514b5d844c13811328d5e054b63653fe077353b77bea801\",\"dweb:/ipfs/QmSdfH8mZNCT6cP1jumEzb1WLzvW9buD7BW1aNL7B85AA4\"]},\"project:/contracts/crowdsale/distribution/FinalizableCrowdsale.sol\":{\"keccak256\":\"0x539e31d660ebc27c95375edd045fffb4097bc1d6fc1a7aecaecfa57f87bfb0a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebef50bc6a61bb70cb1e6839ef86a68788ac888d23f32520b4e6d61198cbef7f\",\"dweb:/ipfs/QmcpoZx7Xc5YRaGEoj21d8K6n9sELq7kMSmzbwFh2q5Zbj\"]},\"project:/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol\":{\"keccak256\":\"0xb84b7b5c61ae7085beeca73fe5c2932209f71655c5c4efb752734f9b8150813b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfccc6e68f9bb1025a85a0f617a81d86ad07f5085213118117dc3c4f2b0ae714\",\"dweb:/ipfs/QmZYRaaxW4R91gWdwK1SvvkbUmTHxtoVf21ZmJpLZ9QRCV\"]},\"project:/contracts/crowdsale/distribution/RefundableCrowdsale.sol\":{\"keccak256\":\"0x6cd0165e291af824ebe06ba15b83648449641b9db75aed8d7a29415e1e8c4a38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65865fed512f2180246bc52168e8129b8cccf5e6adce98e32becec3b127fd41b\",\"dweb:/ipfs/Qma6Kw7RYBmT4q1CPUmbPFRiyWrnviUZD2jVWYajZZ2sRp\"]},\"project:/contracts/crowdsale/ownership/Secondary.sol\":{\"keccak256\":\"0x24a7fb82891d3a215d49d9c082ce3aae02dc3738d704e69c5612ba182ebb880a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://479f1bd8452bd59abf7d900f168c9a3b60db4caf1071b69403d4a0a0fdb15837\",\"dweb:/ipfs/QmRHNz8SqKStUw5FNxYFgSaoSy9au4DxhtF5yUAGy3W3L9\"]},\"project:/contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0xd3cd75315a86939c22bb23367ee867038575c0106458c21b6b34a8fc46e3368f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e042d47352380c479c141cadb838895222775b3c65a9e38129e3f32ea4816e6d\",\"dweb:/ipfs/QmWmjADRCwYw4Mxrk34S5QQgvhE8aPHgY1NeneWJK87p1y\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./FinalizableCrowdsale.sol\";\nimport \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\";\n\n/**\n * @title RefundableCrowdsale\n * @dev Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users\n * getting a refund if goal is not met.\n *\n * Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal\n * is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\n * the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\n * the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.\n */\nabstract contract RefundableCrowdsale is Context, FinalizableCrowdsale {\n    using SafeMath for uint256;\n\n    // minimum amount of funds to be raised in weis\n    uint256 private _goal;\n\n    // refund escrow used to hold funds while crowdsale is running\n    RefundEscrow private _escrow;\n\n    /**\n     * @dev Constructor, creates RefundEscrow.\n     * @param goal_ Funding goal\n     */\n    constructor (uint256 goal_) {\n        require(goal_ > 0, \"RefundableCrowdsale: goal is 0\");\n        _escrow = new RefundEscrow(wallet());\n        _goal = goal_;\n    }\n\n    /**\n     * @return minimum amount of funds to be raised in wei.\n     */\n    function goal() public view returns (uint256) {\n        return _goal;\n    }\n\n    /**\n     * @dev Investors can claim refunds here if crowdsale is unsuccessful.\n     * @param refundee Whose refund will be claimed.\n     */\n    function claimRefund(address payable refundee) public {\n        require(finalized(), \"RefundableCrowdsale: not finalized\");\n        require(!goalReached(), \"RefundableCrowdsale: goal reached\");\n\n        _escrow.withdraw(refundee);\n    }\n\n    /**\n     * @dev Checks whether funding goal was reached.\n     * @return Whether funding goal was reached\n     */\n    function goalReached() public view returns (bool) {\n        return weiRaised() >= _goal;\n    }\n\n    /**\n     * @dev Escrow finalization task, called when finalize() is called.\n     */\n    function _finalization() internal override virtual {\n        if (goalReached()) {\n            _escrow.close();\n            _escrow.beneficiaryWithdraw();\n        } else {\n            _escrow.enableRefunds();\n        }\n\n        super._finalization();\n    }\n\n    /**\n     * @dev Overrides Crowdsale fund forwarding, sending funds to escrow.\n     */\n    function _forwardFunds() override internal {\n        _escrow.deposit{value:msg.value}(_msgSender());\n    }\n}\n",
  "sourcePath": "/Users/jasielmacedo/http/code/personal/solidity-exchange-smart-contract/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
    "exportedSymbols": {
      "Address": [
        742
      ],
      "ConditionalEscrow": [
        799
      ],
      "Context": [
        764
      ],
      "Crowdsale": [
        1920
      ],
      "Escrow": [
        895
      ],
      "FinalizableCrowdsale": [
        1984
      ],
      "IERC20": [
        221
      ],
      "Ownable": [
        103
      ],
      "PostDeliveryCrowdsale": [
        2084
      ],
      "ReentrancyGuard": [
        143
      ],
      "RefundEscrow": [
        1074
      ],
      "RefundableCrowdsale": [
        2225
      ],
      "SafeERC20": [
        445
      ],
      "SafeMath": [
        1386
      ],
      "Secondary": [
        2335
      ],
      "TimedCrowdsale": [
        2496
      ]
    },
    "id": 2226,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2086,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 2087,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 765,
        "src": "57:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2088,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 1387,
        "src": "109:57:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "file": "./FinalizableCrowdsale.sol",
        "id": 2089,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 1985,
        "src": "167:36:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
        "file": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
        "id": 2090,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 1075,
        "src": "204:63:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2092,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 764,
              "src": "965:7:14"
            },
            "id": 2093,
            "nodeType": "InheritanceSpecifier",
            "src": "965:7:14"
          },
          {
            "baseName": {
              "id": 2094,
              "name": "FinalizableCrowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1984,
              "src": "974:20:14"
            },
            "id": 2095,
            "nodeType": "InheritanceSpecifier",
            "src": "974:20:14"
          }
        ],
        "canonicalName": "RefundableCrowdsale",
        "contractDependencies": [
          1074
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2091,
          "nodeType": "StructuredDocumentation",
          "src": "269:654:14",
          "text": " @title RefundableCrowdsale\n @dev Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users\n getting a refund if goal is not met.\n Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal\n is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\n the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\n the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens."
        },
        "fullyImplemented": false,
        "id": 2225,
        "linearizedBaseContracts": [
          2225,
          1984,
          2084,
          2496,
          1920,
          103,
          143,
          764
        ],
        "name": "RefundableCrowdsale",
        "nameLocation": "942:19:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2098,
            "libraryName": {
              "id": 2096,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1386,
              "src": "1007:8:14"
            },
            "nodeType": "UsingForDirective",
            "src": "1001:27:14",
            "typeName": {
              "id": 2097,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1020:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2100,
            "mutability": "mutable",
            "name": "_goal",
            "nameLocation": "1102:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 2225,
            "src": "1086:21:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2099,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1086:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2103,
            "mutability": "mutable",
            "name": "_escrow",
            "nameLocation": "1202:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 2225,
            "src": "1181:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RefundEscrow_$1074",
              "typeString": "contract RefundEscrow"
            },
            "typeName": {
              "id": 2102,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2101,
                "name": "RefundEscrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1074,
                "src": "1181:12:14"
              },
              "referencedDeclaration": 1074,
              "src": "1181:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                "typeString": "contract RefundEscrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2129,
              "nodeType": "Block",
              "src": "1340:138:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2110,
                          "name": "goal_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2106,
                          "src": "1358:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1366:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1358:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6461626c6543726f776473616c653a20676f616c2069732030",
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1369:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15b425ad47b38bd9f192781c8e42c99d6e1ccf6762c7d5fcf31d9a14db02b056",
                          "typeString": "literal_string \"RefundableCrowdsale: goal is 0\""
                        },
                        "value": "RefundableCrowdsale: goal is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15b425ad47b38bd9f192781c8e42c99d6e1ccf6762c7d5fcf31d9a14db02b056",
                          "typeString": "literal_string \"RefundableCrowdsale: goal is 0\""
                        }
                      ],
                      "id": 2109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1350:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:52:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2115,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:52:14"
                },
                {
                  "expression": {
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2116,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2103,
                      "src": "1412:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                        "typeString": "contract RefundEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2120,
                            "name": "wallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1692,
                            "src": "1439:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 2121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1439:8:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1422:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$returns$_t_contract$_RefundEscrow_$1074_$",
                          "typeString": "function (address payable) returns (contract RefundEscrow)"
                        },
                        "typeName": {
                          "id": 2118,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2117,
                            "name": "RefundEscrow",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1074,
                            "src": "1426:12:14"
                          },
                          "referencedDeclaration": 1074,
                          "src": "1426:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                            "typeString": "contract RefundEscrow"
                          }
                        }
                      },
                      "id": 2122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1422:26:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                        "typeString": "contract RefundEscrow"
                      }
                    },
                    "src": "1412:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:36:14"
                },
                {
                  "expression": {
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2125,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2100,
                      "src": "1458:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2126,
                      "name": "goal_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2106,
                      "src": "1466:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1458:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2128,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:13:14"
                }
              ]
            },
            "documentation": {
              "id": 2104,
              "nodeType": "StructuredDocumentation",
              "src": "1216:91:14",
              "text": " @dev Constructor, creates RefundEscrow.\n @param goal_ Funding goal"
            },
            "id": 2130,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2106,
                  "mutability": "mutable",
                  "name": "goal_",
                  "nameLocation": "1333:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2130,
                  "src": "1325:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1324:15:14"
            },
            "returnParameters": {
              "id": 2108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:0:14"
            },
            "scope": 2225,
            "src": "1312:166:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2138,
              "nodeType": "Block",
              "src": "1606:29:14",
              "statements": [
                {
                  "expression": {
                    "id": 2136,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2100,
                    "src": "1623:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2135,
                  "id": 2137,
                  "nodeType": "Return",
                  "src": "1616:12:14"
                }
              ]
            },
            "documentation": {
              "id": 2131,
              "nodeType": "StructuredDocumentation",
              "src": "1484:71:14",
              "text": " @return minimum amount of funds to be raised in wei."
            },
            "functionSelector": "40193883",
            "id": 2139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goal",
            "nameLocation": "1569:4:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1573:2:14"
            },
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "1597:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:9:14"
            },
            "scope": 2225,
            "src": "1560:75:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2164,
              "nodeType": "Block",
              "src": "1839:182:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2146,
                          "name": "finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "1857:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1857:11:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a6564",
                        "id": 2148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1870:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7b130393fa35ff0c09d9006f976400797070339a32be8777612f2bf172118ce",
                          "typeString": "literal_string \"RefundableCrowdsale: not finalized\""
                        },
                        "value": "RefundableCrowdsale: not finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7b130393fa35ff0c09d9006f976400797070339a32be8777612f2bf172118ce",
                          "typeString": "literal_string \"RefundableCrowdsale: not finalized\""
                        }
                      ],
                      "id": 2145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1849:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1849:58:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2150,
                  "nodeType": "ExpressionStatement",
                  "src": "1849:58:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1925:14:14",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2152,
                            "name": "goalReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2177,
                            "src": "1926:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1926:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6461626c6543726f776473616c653a20676f616c2072656163686564",
                        "id": 2155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1941:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b70f1607eed4c774d2a2f4c5a756430e404e5829ffeaa00f1b05542215391631",
                          "typeString": "literal_string \"RefundableCrowdsale: goal reached\""
                        },
                        "value": "RefundableCrowdsale: goal reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b70f1607eed4c774d2a2f4c5a756430e404e5829ffeaa00f1b05542215391631",
                          "typeString": "literal_string \"RefundableCrowdsale: goal reached\""
                        }
                      ],
                      "id": 2151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1917:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:60:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2157,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:60:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2161,
                        "name": "refundee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "2005:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 2158,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2103,
                        "src": "1988:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                          "typeString": "contract RefundEscrow"
                        }
                      },
                      "id": 2160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 798,
                      "src": "1988:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 2162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1988:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2163,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:26:14"
                }
              ]
            },
            "documentation": {
              "id": 2140,
              "nodeType": "StructuredDocumentation",
              "src": "1641:139:14",
              "text": " @dev Investors can claim refunds here if crowdsale is unsuccessful.\n @param refundee Whose refund will be claimed."
            },
            "functionSelector": "bffa55d5",
            "id": 2165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefund",
            "nameLocation": "1794:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "refundee",
                  "nameLocation": "1822:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2165,
                  "src": "1806:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1806:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1805:26:14"
            },
            "returnParameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:0:14"
            },
            "scope": 2225,
            "src": "1785:236:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2176,
              "nodeType": "Block",
              "src": "2194:44:14",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2171,
                        "name": "weiRaised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "2211:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2211:11:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 2173,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2100,
                      "src": "2226:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2211:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2170,
                  "id": 2175,
                  "nodeType": "Return",
                  "src": "2204:27:14"
                }
              ]
            },
            "documentation": {
              "id": 2166,
              "nodeType": "StructuredDocumentation",
              "src": "2027:112:14",
              "text": " @dev Checks whether funding goal was reached.\n @return Whether funding goal was reached"
            },
            "functionSelector": "7d3d6522",
            "id": 2177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goalReached",
            "nameLocation": "2153:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2164:2:14"
            },
            "returnParameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2177,
                  "src": "2188:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2168,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2187:6:14"
            },
            "scope": 2225,
            "src": "2144:94:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1983
            ],
            "body": {
              "id": 2207,
              "nodeType": "Block",
              "src": "2383:204:14",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2182,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2177,
                      "src": "2397:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2397:13:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2200,
                    "nodeType": "Block",
                    "src": "2501:48:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2195,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2103,
                              "src": "2515:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 2197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "enableRefunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1033,
                            "src": "2515:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 2198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2515:23:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2199,
                        "nodeType": "ExpressionStatement",
                        "src": "2515:23:14"
                      }
                    ]
                  },
                  "id": 2201,
                  "nodeType": "IfStatement",
                  "src": "2393:156:14",
                  "trueBody": {
                    "id": 2194,
                    "nodeType": "Block",
                    "src": "2412:83:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2184,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2103,
                              "src": "2426:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 2186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "close",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1009,
                            "src": "2426:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2426:15:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2188,
                        "nodeType": "ExpressionStatement",
                        "src": "2426:15:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2189,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2103,
                              "src": "2455:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 2191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1057,
                            "src": "2455:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 2192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2455:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2193,
                        "nodeType": "ExpressionStatement",
                        "src": "2455:29:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2202,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2559:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RefundableCrowdsale_$2225_$",
                          "typeString": "type(contract super RefundableCrowdsale)"
                        }
                      },
                      "id": 2204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1983,
                      "src": "2559:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:21:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2206,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:21:14"
                }
              ]
            },
            "documentation": {
              "id": 2178,
              "nodeType": "StructuredDocumentation",
              "src": "2244:83:14",
              "text": " @dev Escrow finalization task, called when finalize() is called."
            },
            "id": 2208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_finalization",
            "nameLocation": "2341:13:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2180,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2366:8:14"
            },
            "parameters": {
              "id": 2179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2354:2:14"
            },
            "returnParameters": {
              "id": 2181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2383:0:14"
            },
            "scope": 2225,
            "src": "2332:255:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1919
            ],
            "body": {
              "id": 2223,
              "nodeType": "Block",
              "src": "2726:63:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2219,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "2769:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2769:12:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2213,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2103,
                          "src": "2736:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                            "typeString": "contract RefundEscrow"
                          }
                        },
                        "id": 2215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 985,
                        "src": "2736:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 2216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2758:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2758:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2736:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2736:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2222,
                  "nodeType": "ExpressionStatement",
                  "src": "2736:46:14"
                }
              ]
            },
            "documentation": {
              "id": 2209,
              "nodeType": "StructuredDocumentation",
              "src": "2593:85:14",
              "text": " @dev Overrides Crowdsale fund forwarding, sending funds to escrow."
            },
            "id": 2224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_forwardFunds",
            "nameLocation": "2692:13:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2211,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2708:8:14"
            },
            "parameters": {
              "id": 2210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2705:2:14"
            },
            "returnParameters": {
              "id": 2212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2726:0:14"
            },
            "scope": 2225,
            "src": "2683:106:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2226,
        "src": "924:1867:14",
        "usedErrors": []
      }
    ],
    "src": "32:2760:14"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
    "exportedSymbols": {
      "Address": [
        742
      ],
      "ConditionalEscrow": [
        799
      ],
      "Context": [
        764
      ],
      "Crowdsale": [
        1920
      ],
      "Escrow": [
        895
      ],
      "FinalizableCrowdsale": [
        1984
      ],
      "IERC20": [
        221
      ],
      "Ownable": [
        103
      ],
      "PostDeliveryCrowdsale": [
        2084
      ],
      "ReentrancyGuard": [
        143
      ],
      "RefundEscrow": [
        1074
      ],
      "RefundableCrowdsale": [
        2225
      ],
      "SafeERC20": [
        445
      ],
      "SafeMath": [
        1386
      ],
      "Secondary": [
        2335
      ],
      "TimedCrowdsale": [
        2496
      ]
    },
    "id": 2226,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2086,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 2087,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 765,
        "src": "57:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2088,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 1387,
        "src": "109:57:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "file": "./FinalizableCrowdsale.sol",
        "id": 2089,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 1985,
        "src": "167:36:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
        "file": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
        "id": 2090,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2226,
        "sourceUnit": 1075,
        "src": "204:63:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2092,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 764,
              "src": "965:7:14"
            },
            "id": 2093,
            "nodeType": "InheritanceSpecifier",
            "src": "965:7:14"
          },
          {
            "baseName": {
              "id": 2094,
              "name": "FinalizableCrowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1984,
              "src": "974:20:14"
            },
            "id": 2095,
            "nodeType": "InheritanceSpecifier",
            "src": "974:20:14"
          }
        ],
        "canonicalName": "RefundableCrowdsale",
        "contractDependencies": [
          1074
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2091,
          "nodeType": "StructuredDocumentation",
          "src": "269:654:14",
          "text": " @title RefundableCrowdsale\n @dev Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users\n getting a refund if goal is not met.\n Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal\n is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\n the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\n the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens."
        },
        "fullyImplemented": false,
        "id": 2225,
        "linearizedBaseContracts": [
          2225,
          1984,
          2084,
          2496,
          1920,
          103,
          143,
          764
        ],
        "name": "RefundableCrowdsale",
        "nameLocation": "942:19:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2098,
            "libraryName": {
              "id": 2096,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1386,
              "src": "1007:8:14"
            },
            "nodeType": "UsingForDirective",
            "src": "1001:27:14",
            "typeName": {
              "id": 2097,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1020:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2100,
            "mutability": "mutable",
            "name": "_goal",
            "nameLocation": "1102:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 2225,
            "src": "1086:21:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2099,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1086:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2103,
            "mutability": "mutable",
            "name": "_escrow",
            "nameLocation": "1202:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 2225,
            "src": "1181:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RefundEscrow_$1074",
              "typeString": "contract RefundEscrow"
            },
            "typeName": {
              "id": 2102,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2101,
                "name": "RefundEscrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1074,
                "src": "1181:12:14"
              },
              "referencedDeclaration": 1074,
              "src": "1181:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                "typeString": "contract RefundEscrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2129,
              "nodeType": "Block",
              "src": "1340:138:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2110,
                          "name": "goal_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2106,
                          "src": "1358:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1366:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1358:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6461626c6543726f776473616c653a20676f616c2069732030",
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1369:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15b425ad47b38bd9f192781c8e42c99d6e1ccf6762c7d5fcf31d9a14db02b056",
                          "typeString": "literal_string \"RefundableCrowdsale: goal is 0\""
                        },
                        "value": "RefundableCrowdsale: goal is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15b425ad47b38bd9f192781c8e42c99d6e1ccf6762c7d5fcf31d9a14db02b056",
                          "typeString": "literal_string \"RefundableCrowdsale: goal is 0\""
                        }
                      ],
                      "id": 2109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1350:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:52:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2115,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:52:14"
                },
                {
                  "expression": {
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2116,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2103,
                      "src": "1412:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                        "typeString": "contract RefundEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2120,
                            "name": "wallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1692,
                            "src": "1439:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 2121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1439:8:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1422:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$returns$_t_contract$_RefundEscrow_$1074_$",
                          "typeString": "function (address payable) returns (contract RefundEscrow)"
                        },
                        "typeName": {
                          "id": 2118,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2117,
                            "name": "RefundEscrow",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1074,
                            "src": "1426:12:14"
                          },
                          "referencedDeclaration": 1074,
                          "src": "1426:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                            "typeString": "contract RefundEscrow"
                          }
                        }
                      },
                      "id": 2122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1422:26:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                        "typeString": "contract RefundEscrow"
                      }
                    },
                    "src": "1412:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:36:14"
                },
                {
                  "expression": {
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2125,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2100,
                      "src": "1458:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2126,
                      "name": "goal_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2106,
                      "src": "1466:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1458:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2128,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:13:14"
                }
              ]
            },
            "documentation": {
              "id": 2104,
              "nodeType": "StructuredDocumentation",
              "src": "1216:91:14",
              "text": " @dev Constructor, creates RefundEscrow.\n @param goal_ Funding goal"
            },
            "id": 2130,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2106,
                  "mutability": "mutable",
                  "name": "goal_",
                  "nameLocation": "1333:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2130,
                  "src": "1325:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1324:15:14"
            },
            "returnParameters": {
              "id": 2108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:0:14"
            },
            "scope": 2225,
            "src": "1312:166:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2138,
              "nodeType": "Block",
              "src": "1606:29:14",
              "statements": [
                {
                  "expression": {
                    "id": 2136,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2100,
                    "src": "1623:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2135,
                  "id": 2137,
                  "nodeType": "Return",
                  "src": "1616:12:14"
                }
              ]
            },
            "documentation": {
              "id": 2131,
              "nodeType": "StructuredDocumentation",
              "src": "1484:71:14",
              "text": " @return minimum amount of funds to be raised in wei."
            },
            "functionSelector": "40193883",
            "id": 2139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goal",
            "nameLocation": "1569:4:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1573:2:14"
            },
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "1597:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:9:14"
            },
            "scope": 2225,
            "src": "1560:75:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2164,
              "nodeType": "Block",
              "src": "1839:182:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2146,
                          "name": "finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "1857:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1857:11:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a6564",
                        "id": 2148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1870:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7b130393fa35ff0c09d9006f976400797070339a32be8777612f2bf172118ce",
                          "typeString": "literal_string \"RefundableCrowdsale: not finalized\""
                        },
                        "value": "RefundableCrowdsale: not finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7b130393fa35ff0c09d9006f976400797070339a32be8777612f2bf172118ce",
                          "typeString": "literal_string \"RefundableCrowdsale: not finalized\""
                        }
                      ],
                      "id": 2145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1849:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1849:58:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2150,
                  "nodeType": "ExpressionStatement",
                  "src": "1849:58:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1925:14:14",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2152,
                            "name": "goalReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2177,
                            "src": "1926:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1926:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6461626c6543726f776473616c653a20676f616c2072656163686564",
                        "id": 2155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1941:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b70f1607eed4c774d2a2f4c5a756430e404e5829ffeaa00f1b05542215391631",
                          "typeString": "literal_string \"RefundableCrowdsale: goal reached\""
                        },
                        "value": "RefundableCrowdsale: goal reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b70f1607eed4c774d2a2f4c5a756430e404e5829ffeaa00f1b05542215391631",
                          "typeString": "literal_string \"RefundableCrowdsale: goal reached\""
                        }
                      ],
                      "id": 2151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1917:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:60:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2157,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:60:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2161,
                        "name": "refundee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "2005:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 2158,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2103,
                        "src": "1988:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                          "typeString": "contract RefundEscrow"
                        }
                      },
                      "id": 2160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 798,
                      "src": "1988:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 2162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1988:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2163,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:26:14"
                }
              ]
            },
            "documentation": {
              "id": 2140,
              "nodeType": "StructuredDocumentation",
              "src": "1641:139:14",
              "text": " @dev Investors can claim refunds here if crowdsale is unsuccessful.\n @param refundee Whose refund will be claimed."
            },
            "functionSelector": "bffa55d5",
            "id": 2165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefund",
            "nameLocation": "1794:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "refundee",
                  "nameLocation": "1822:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2165,
                  "src": "1806:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1806:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1805:26:14"
            },
            "returnParameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:0:14"
            },
            "scope": 2225,
            "src": "1785:236:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2176,
              "nodeType": "Block",
              "src": "2194:44:14",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2171,
                        "name": "weiRaised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "2211:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2211:11:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 2173,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2100,
                      "src": "2226:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2211:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2170,
                  "id": 2175,
                  "nodeType": "Return",
                  "src": "2204:27:14"
                }
              ]
            },
            "documentation": {
              "id": 2166,
              "nodeType": "StructuredDocumentation",
              "src": "2027:112:14",
              "text": " @dev Checks whether funding goal was reached.\n @return Whether funding goal was reached"
            },
            "functionSelector": "7d3d6522",
            "id": 2177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goalReached",
            "nameLocation": "2153:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2164:2:14"
            },
            "returnParameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2177,
                  "src": "2188:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2168,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2187:6:14"
            },
            "scope": 2225,
            "src": "2144:94:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1983
            ],
            "body": {
              "id": 2207,
              "nodeType": "Block",
              "src": "2383:204:14",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2182,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2177,
                      "src": "2397:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2397:13:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2200,
                    "nodeType": "Block",
                    "src": "2501:48:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2195,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2103,
                              "src": "2515:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 2197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "enableRefunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1033,
                            "src": "2515:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 2198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2515:23:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2199,
                        "nodeType": "ExpressionStatement",
                        "src": "2515:23:14"
                      }
                    ]
                  },
                  "id": 2201,
                  "nodeType": "IfStatement",
                  "src": "2393:156:14",
                  "trueBody": {
                    "id": 2194,
                    "nodeType": "Block",
                    "src": "2412:83:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2184,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2103,
                              "src": "2426:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 2186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "close",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1009,
                            "src": "2426:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2426:15:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2188,
                        "nodeType": "ExpressionStatement",
                        "src": "2426:15:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2189,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2103,
                              "src": "2455:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 2191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1057,
                            "src": "2455:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 2192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2455:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2193,
                        "nodeType": "ExpressionStatement",
                        "src": "2455:29:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2202,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2559:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RefundableCrowdsale_$2225_$",
                          "typeString": "type(contract super RefundableCrowdsale)"
                        }
                      },
                      "id": 2204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1983,
                      "src": "2559:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:21:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2206,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:21:14"
                }
              ]
            },
            "documentation": {
              "id": 2178,
              "nodeType": "StructuredDocumentation",
              "src": "2244:83:14",
              "text": " @dev Escrow finalization task, called when finalize() is called."
            },
            "id": 2208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_finalization",
            "nameLocation": "2341:13:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2180,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2366:8:14"
            },
            "parameters": {
              "id": 2179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2354:2:14"
            },
            "returnParameters": {
              "id": 2181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2383:0:14"
            },
            "scope": 2225,
            "src": "2332:255:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1919
            ],
            "body": {
              "id": 2223,
              "nodeType": "Block",
              "src": "2726:63:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2219,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "2769:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2769:12:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2213,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2103,
                          "src": "2736:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$1074",
                            "typeString": "contract RefundEscrow"
                          }
                        },
                        "id": 2215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 985,
                        "src": "2736:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 2216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2758:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2758:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2736:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2736:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2222,
                  "nodeType": "ExpressionStatement",
                  "src": "2736:46:14"
                }
              ]
            },
            "documentation": {
              "id": 2209,
              "nodeType": "StructuredDocumentation",
              "src": "2593:85:14",
              "text": " @dev Overrides Crowdsale fund forwarding, sending funds to escrow."
            },
            "id": 2224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_forwardFunds",
            "nameLocation": "2692:13:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2211,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2708:8:14"
            },
            "parameters": {
              "id": 2210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2705:2:14"
            },
            "returnParameters": {
              "id": 2212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2726:0:14"
            },
            "scope": 2225,
            "src": "2683:106:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2226,
        "src": "924:1867:14",
        "usedErrors": []
      }
    ],
    "src": "32:2760:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-03T19:43:04.627Z",
  "devdoc": {
    "details": "Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users getting a refund if goal is not met. Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.",
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "returns": {
          "_0": "the balance of an account."
        }
      },
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "claimRefund(address)": {
        "details": "Investors can claim refunds here if crowdsale is unsuccessful.",
        "params": {
          "refundee": "Whose refund will be claimed."
        }
      },
      "closingTime()": {
        "returns": {
          "_0": "the crowdsale closing time."
        }
      },
      "constructor": {
        "details": "Constructor, creates RefundEscrow.",
        "params": {
          "goal_": "Funding goal"
        }
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "finalized()": {
        "returns": {
          "_0": "true if the crowdsale is finalized, false otherwise."
        }
      },
      "goal()": {
        "returns": {
          "_0": "minimum amount of funds to be raised in wei."
        }
      },
      "goalReached()": {
        "details": "Checks whether funding goal was reached.",
        "returns": {
          "_0": "Whether funding goal was reached"
        }
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "returns": {
          "_0": "Whether crowdsale period has elapsed"
        }
      },
      "isOpen()": {
        "returns": {
          "_0": "true if the crowdsale is open, false otherwise."
        }
      },
      "openingTime()": {
        "returns": {
          "_0": "the crowdsale opening time."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "rate()": {
        "returns": {
          "_0": "the number of token units a buyer gets per wei."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "token()": {
        "returns": {
          "_0": "the token being sold."
        }
      },
      "tokenBalance()": {
        "returns": {
          "_0": "the token balance available to buy."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "wallet()": {
        "returns": {
          "_0": "the address where funds are collected."
        }
      },
      "weiRaised()": {
        "returns": {
          "_0": "the amount of wei raised."
        }
      },
      "withdrawTokens()": {
        "details": "Withdraw tokens only after crowdsale ends."
      }
    },
    "title": "RefundableCrowdsale",
    "version": 1
  },
  "userdoc": {
    "events": {
      "TimedCrowdsaleExtended(uint256,uint256)": {
        "notice": "Event for crowdsale extending"
      },
      "TokensPurchased(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}